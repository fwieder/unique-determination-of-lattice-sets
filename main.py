from functions import *
import time
from scipy.spatial import ConvexHull


## Sets that form the counterexample in the Gardner, Gronchi, Zong paper:
A = [(-2,0),(-1,2),(-1,1),(-1,0),(0,1),(0,0),(0,-1),(1,0),(1,-1),(1,-2),(2,0)]
B = [(-2,1),(-1,1),(-1,0),(0,2),(0,1),(0,0),(0,-1),(0,-2),(1,0),(1,-1),(2,-1)]
C = [(-2,2),(-1,1),(-1,0),(-1,-1),(0,1),(0,0),(0,-1),(1,1),(1,0),(1,-1),(2,-2)]


Add1 = [(-3,-2),(-2,0),(-2,-1),(-1,0),(-1,-1),(0,0),(1,1),(1,0),(2,1),(2,0),(3,2)]
Add2 = [(-3,-1),(-2,-2),(-2,-1),(-1,0),(-1,-1),(0,0),(1,1),(1,0),(2,1),(2,2),(3,1)]


## 3-dimensional origin-symmetric, convex lattice sets
A3 = [(-2,0,0),(-1,2,0),(-1,1,0),(-1,0,0),(0,1,0),(0,0,0),(0,-1,0),(1,0,0),(1,-1,0),(1,-2,0),(2,0,0),(-2,0,1),(-1,2,1),(-1,1,1),(-1,0,1),(0,1,1),(0,0,1),(0,-1,1),(1,0,1),(1,-1,1),(1,-2,1),(2,0,1),(-2,0,-1),(-1,2,-1),(-1,1,-1),(-1,0,-1),(0,1,-1),(0,0,-1),(0,-1,-1),(1,0,-1),(1,-1,-1),(1,-2,-1),(2,0,-1)]
B3 = [(-2,1,0),(-1,1,0),(-1,0,0),(0,2,0),(0,1,0),(0,0,0),(0,-1,0),(0,-2,0),(1,0,0),(1,-1,0),(2,-1,0),(-2,1,1),(-1,1,1),(-1,0,1),(0,2,1),(0,1,1),(0,0,1),(0,-1,1),(0,-2,1),(1,0,1),(1,-1,1),(2,-1,1),(-2,1,-1),(-1,1,-1),(-1,0,-1),(0,2,-1),(0,1,-1),(0,0,-1),(0,-1,-1),(0,-2,-1),(1,0,-1),(1,-1,-1),(2,-1,-1)]
C3 = [(-2,2,0),(-1,1,0),(-1,0,0),(-1,-1,0),(0,1,0),(0,0,0),(0,-1,0),(1,1,0),(1,0,0),(1,-1,0),(2,-2,0),(-2,2,1),(-1,1,1),(-1,0,1),(-1,-1,1),(0,1,1),(0,0,1),(0,-1,1),(1,1,1),(1,0,1),(1,-1,1),(2,-2,1),(-2,2,-1),(-1,1,-1),(-1,0,-1),(-1,-1,-1),(0,1,-1),(0,0,-1),(0,-1,-1),(1,1,-1),(1,0,-1),(1,-1,-1),(2,-2,-1)]

D = [(0,1),(0,0),(1,0),(-1,0),(0,-1),(1,1)]

'''
print(is_cls(D))


PMA3 = sorted(primitive_multiset(A3), key = lambda element: (element[0],element[1],element[2]))
PMB3 = sorted(primitive_multiset(B3), key = lambda element: (element[0],element[1],element[2]))
PMC3 = sorted(primitive_multiset(C3), key = lambda element: (element[0],element[1],element[2]))

print("PMA3 = PMB3:",PMA3 == PMB3)
print("PMA3 = PMC3:",PMA3 == PMC3)
print("PMB3 = PMC3:",PMB3 == PMC3)

print(PMA3, "\n \n", PMB3)
'''

start = time.time()

c_examples(4,3,5,True)
'''temp = c_examples_3d(2,2,1,6,True)'''

end = time.time()
print("It took",end-start, "seconds")
print("which is", (end-start)/60, "minutes")
print("which is", (end-start)/3600, "hours")